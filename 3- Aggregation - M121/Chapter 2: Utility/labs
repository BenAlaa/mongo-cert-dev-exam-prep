1- 

- released in the USA && tomatoes.viewer.rating >= 3 
    calculate a new field called num_favs that represets 
        how many favorites appear in the cast field of the movie

- num_favs, tomatoes.viewer.rating, and title    sort -1

- skip 24

let favorites = [
  "Sandra Bullock",
  "Tom Hanks",
  "Julia Roberts",
  "Kevin Spacey",
  "George Clooney"]

let pipline = [
    {
        $match: {
            countries: {
                $in: ['USA']
            },
            "tomatoes.viewer.rating": {
                $gte: 3
            },
            cast: {
                $elemMatch: {
                    $exists: true
                }
            }
        }
    },
    {
        $project: {
            _id: 0,
            cast: 1,
            title: 1,
            tomatoes: 1,
            num_favs: {
                $size: {
                    $setIntersection: ["$cast", favorites]
                }
            }
        }
    },
    {
        $sort: {
            num_favs: -1,
            "tomatoes.viewer.rating": -1,
            title: -1
        }
    },
    {
        $skip: 24
    },
    {
        $limit: 1
    }
]

=====================================================================================
2-

Calculate an average rating for each movie

language: English
imdb.rating >= 1
imdb.votes >=1
released   >= 1990

scaled_votes = {
    $add: [
      1,
      {
        $multiply: [
          9,
          {
            $divide: [
              { $subtract: ["$imdb.votes", 5] },
              { $subtract: [1521105, 5] }
            ]
          }
        ]
      }
    ]
}

normalized_rating = average(scaled_votes, imdb.rating)

x_max = 1521105
x_min = 5
min = 1
max = 10
x = imdb.votes

pipline = [
    {
        $match: {
            languages: "English",
            "imdb.rating": {
                $gte: 1
            },
            "imdb.votes": {
                $gte: 1
            },
            year: {
                $gte: 1990
            }
        }
    },
    {
        $project: {
            _id: 0,
            title: 1,
            imdb: 1,
            scaled_votes: {
                $add: [
                    1,
                    {
                        $multiply: [
                            9,
                            {
                                $divide: [
                                    { $subtract: ["$imdb.votes", 5] },
                                    { $subtract: [1521105, 5] }
                                ]
                            }
                        ]
                    }
                ]
            }
        }
    },
    {
        $project: {
            normalized_rating: {
                $avg: ["$scaled_votes", "$imdb.rating"]
            },
            title: 1
        }
    },
    {
        $sort: {
            normalized_rating: 1
        }
    },
    {
        $limit: 1
    }
]

=============================================================================
#2
----

- how many movies every cast member has been in 
- get an average imdb.rating for each cast member.

pipline = [
    {
        $match: {
            cast: { $elemMatch: { $exists: true } },
            "imdb.rating": { $exists: true },
            languages: "English"
        }
    },
    {
        $unwind: "$cast"
    },
    {
        $group: {
            _id: "$cast",
            numFilms: {
                $sum: 1
            },
            average: {
                $avg: "$imdb.rating"
            }
        }
    },
    {
        $sort: {
            numFilms: -1
        }
    }
]


{ "_id": 'John Wayne', "numFilms": 107, "average": 6.4 }

exact
db.movies.aggregate([
  {
    $match: {
      languages: "English"
    }
  },
  {
    $project: { _id: 0, cast: 1, "imdb.rating": 1 }
  },
  {
    $unwind: "$cast"
  },
  {
    $group: {
      _id: "$cast",
      numFilms: { $sum: 1 },
      average: { $avg: "$imdb.rating" }
    }
  },
  {
    $project: {
      numFilms: 1,
      average: {
        $divide: [{ $trunc: { $multiply: ["$average", 10] } }, 10]
      }
    }
  },
  {
    $sort: { numFilms: -1 }
  },
  {
    $limit: 1
  }
])