mongos is responsible for routing queries

if the shard key is in the predicate, then it will target a specific shards (very efficient)
otherwise it performs a scatter gather on list of shards (all), opens a cursor in each one, 
    performs the query then merges the result from each shard

using sort ---> sort in each shard then merge sort in mongos
using limit ---> limit in each shard then re applies the limit in mongos
using skip --->  skip only after merging all results

each mongos keeps local cashed map of key to shard that exists on the config server

compound indexes can be used as shard keys in this case, 
    using sub of them in order in the pridicate will result in a target query
    ex: 
        shard key: {a: 1, b: 1, c: 1}
        
        these will target
        db.col.find({a: })
        db.col.find({a: , b: })
        db.col.find({a: , b: , c: })

        these won't
        db.col.find({b: })
        db.col.find({c: })

using db.col.find().explain()  shows us detailed info about how we got the results