- index selectivity ---> minimizing index keys scanned
	- range queries aren't very selective
	- equality is very selective
	- createIndex({the more selective, the less selective, ...})
	- to use index for both sorting and filtering, the query predicate should be all equalities and no range
	
	- find({a: "", b: {$gt: 1}}).sort(c: 1)
		- an index with shape {a: 1, b: 1, c: 1} won't be use in sorting
				that's because the prefix used to reach the sort will be a, b, c and b is range
				but index with shape {a: 1, c: 1, b: 1} will be used in sortin because
				the prefix used to reach sort is a, c which has equality only


- equality, sort, range:
	- best way to define an index would be: 
		{equality_condition, sort_conditions, range_conditions}