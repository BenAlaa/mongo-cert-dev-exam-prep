indexes help in:
	- optimizing queries
	- decreasing response time

- db.stats()      shows the index sizes
- db.col.stats()  shows the index sizes per collection

- disk size isn't a big issue
	- if no space is available, the index won't be created
	- if we use a separate disk to store the indexes, insure it has enough disk space

- Memory:
	- we should have enough space to accomodate the indexes
	- if not, then disk access is required to traverse index file and will slow down queries
	- db.col.stats({indexDetails: true})  shows the index sizes per collection

- Edge Cases:
	- occasional reports
		- indexes used in operational workloads should be in Memory
		- indexes used in BI tools do not have to be always in memory
		- usuallly BI tools should only talk to a secondary not the primary node then the 
				their related indexes should also be created only on those nodes
	- right-end-side index incerements
			- indexes on fields that grow monotonically ex: counts, dates, incremental ids
			- should not always be in Memory
			- the btree would be unbalanced and tend to grow to the right hand side
			- only the right hand side is needed to be in memory (new added data)